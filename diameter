class TreeNode:
    def __init__(self, value=0, left=None, right=None):
        self.value = value
        self.left = left
        self.right = right

def diameter_of_binary_tree(root):
    def height_and_diameter(node):
        if node is None:
            return 0, 0
        
        left_height, left_diameter = height_and_diameter(node.left)
        right_height, right_diameter = height_and_diameter(node.right)
        
        current_height = 1 + max(left_height, right_height)
        current_diameter = max(left_diameter, right_diameter, left_height + right_height)
        
        return current_height, current_diameter
    
    _, diameter = height_and_diameter(root)
    return diameter
if __name__ == "__main__":
    # Creating a sample binary tree
    node4 = TreeNode(4)
    node5 = TreeNode(5)
    node2 = TreeNode(2, node4, node5)
    node3 = TreeNode(3)
    root = TreeNode(1, node2, node3)
    print("Diameter of the binary tree:", diameter_of_binary_tree(root))  # Output will be 4 (path 4 -> 2 -> 1 -> 3)
